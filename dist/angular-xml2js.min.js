/*! angular-xml2js-1.0.0 by xemle@phtagr.org, 2015-01-21, MIT license */
angular.module("xemle.xml",[]).filter("textToXml",["$window","$log",function(a,b){return function(c){var d;if("DOMParser"in a){var e=new a.DOMParser;try{d=e.parseFromString(c,"text/xml")}catch(f){throw b.error("Could not parse input: "+c),f}}else{if(!("ActiveXObject"in a))throw new Error("Your JS engine does not support a native DOM parser");if(d=new a.ActiveXObject("Microsoft.XMLDOM"),!d)throw b.error("Could not load Microsoft ActiveX XMLDOM"),new Error("Could not load Microsoft ActiveX XMLDOM");try{d.async=!1,d.loadXML(c)}catch(f){throw b.error("Could not parse input: "+c),f}}return d}}]),angular.module("xemle.xml").filter("xmlToJson",[function(){function a(a){return a.nodeType===d?"value":a.localName||a.nodeName}function b(g){var h,i,j,k={};if(g.prefix&&(k[f]={prefix:g.prefix,URI:g.namespaceURI}),g.nodeType===c){if(g.attributes.length>0){k[e]={};for(var l=0;l<g.attributes.length;l++)h=g.attributes.item(l),k[e][a(h)]=b(h)}}else if(g.nodeType===d)return g.nodeValue;if(g.hasChildNodes())for(var m=0;m<g.childNodes.length;m++)if(i=g.childNodes.item(m),j=a(i),angular.isUndefined(k[j]))k[j]=b(i);else{if(!angular.isArray(k[j])){var n=k[j];k[j]=[],k[j].push(n)}k[j].push(b(i))}return k}var c=1,d=3,e="@attributes",f="@ns";return function(a){return b(a)}}]);